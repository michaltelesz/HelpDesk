@using System.Text
@model Helpdesk.WebUI.Models.Calls.CallCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Call</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2">Status</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StatusID, new SelectList(Model.Statuses, "ID", "Description", Model.StatusID), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "resize: none", rows = 4 } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Components.Count() > 0)
        {
            <h4>Components</h4>
            <div class="input_fields_wrap"></div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a class="btn btn-default add_field_button">Add more components</a>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to request", "Details", "Requests", new { id = Model.RequestID }, null)
</div>

<script type="text/javascript">
        var max_fields = 10; //maximum input boxes allowed
        var wrapper = $(".input_fields_wrap"); //Fields wrapper
        var add_button = $(".add_field_button"); //Add button ID

        var x = 1; //initlal text box count
        $(add_button).click(function (e) { //on add input button click
            e.preventDefault();
            if (x < max_fields) { //max input box allowed
                $(wrapper).append('<div class="panel panel-default"><div class="panel-heading"><span>Part ' + x + '</span><span style="float:right"><a href="#" class="remove_field">Remove</a></div><div class="panel-body"><div class="form-group"><label class="control-label col-md-2">Component</label><div class="col-md-10">@Html.Raw(@Html.DropDownList("ComponentID[]", new SelectList(Model.Components, "ID", "Name", "DataGroup", selectedValue: null), new { @class = "form-control" }).ToString().Replace(Environment.NewLine, ""))</div></div><div class="form-group"><label class="control-label col-md-2">Description</label><div class="col-md-10">@Html.Raw(@Html.TextArea("ComponentDescription[]", "", new { @class = "form-control", style = "resize: none", rows = 4 }).ToString().Replace(Environment.NewLine,""))</div></div></div></div>'); //add input box
                x++; //text box increment
            }
        });

        $(wrapper).on("click", ".remove_field", function (e) { //user click on remove text
            e.preventDefault(); $(this).parents('.panel').first().remove(); x--;
        })
</script>

@*<div class="panel panel-default">
        <div class="panel-heading"><span>Part 1</span><span style="float:right"><a href="#" class="remove_field">Remove</a></span></div>
        <div class="panel-body">
            <div class="form-group">
                <label class="control-label col-md-2">Component</label>
                <div class="col-md-10">
                    @Html.DropDownList("ComponentID[]", new SelectList(Model.Components, "ID", "Name", "DataGroup", selectedValue: null))
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Description</label>
                <div class="col-md-10">
                    @Html.TextBox("ComponentDescription[]", "", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>*@
